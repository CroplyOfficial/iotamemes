{"version":3,"sources":["constants/userContants.ts","actions/userActions.tsx","components/Container80/Container80.tsx","components/Loader/Loader.tsx","pages/AuthSuccess/AuthSuccess.tsx","components/StackGrid/StackGrid.tsx","pages/NewMeme/NewMeme.tsx","components/Navbar/AvatarDropdown.tsx","components/Navbar/DiscordLoginButton.tsx","components/IotaButton/IotaButton.tsx","components/Navbar/Navbar.tsx","components/Memes/SearchBar/SearchBar.tsx","constants/memeContants.ts","components/Memes/Modal/Media.tsx","components/Modal/Modal.tsx","components/Memes/Modal/Modal2.tsx","components/Pagination/Pagination.tsx","components/Memes/Memes.tsx","actions/memeActions.tsx","pages/MemesPage/MemesPage.tsx","pages/Artists/Artists.tsx","pages/SettingsPage/SettingsPage.tsx","pages/MemePage/MemePage.tsx","pages/UserPage/UserPage.tsx","pages/TermsPage/TermsPage.tsx","pages/PrivacyPage/PrivacyPage.tsx","pages/ReportsPage/ReportsPage.tsx","pages/AboutPage/AboutPage.tsx","components/PrivateRoute/PrivateRoute.tsx","App.tsx","store.ts","reducers/userReducers.ts","reducers/memeReducers.ts","index.tsx","components/Card/Card.tsx","components/Memes/Meme/Meme.tsx"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","GET_LIKED_MEMES_REQUEST","GET_LIKED_MEMES_SUCCESS","GET_LIKED_MEMES_FAIL","login","code","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","logout","removeItem","Container80","children","className","Loader","src","alt","AuthSuccess","location","history","discordCode","search","split","disptach","useDispatch","useEffect","push","auth","StackGrid","NewMeme","userLogin","useSelector","state","userInfo","error","loading","useState","tags","setTags","file","size","setFile","progress","setProgress","uploading","setUploading","memeError","setMemeError","formSubmitHandler","e","console","log","preventDefault","formData","FormData","append","Authorization","token","onUploadProgress","Math","round","loaded","total","_id","Card","onSubmit","onChange","value","name","id","accept","target","files","style","marginBottom","required","width","AvatarDropdown","props","user","avatar","href","onClick","DiscordLoginButton","to","marginTop","icon","faDiscord","IotaButton","address","text","identifier","uuid4","document","getElementById","shadowRoot","querySelector","click","display","currency","label","defaultProps","Navbar","isLoggedIn","hamburgerOpen","setHamburgerOpen","handleOnClick","classNames","role","aria-label","height","aria-expanded","data-target","aria-hidden","fontSize","background","margin","borderRadius","SearchBar","memes","setMemes","showMeme","sortMethod","setSortMethod","setSearchTag","filterByTag","filter","meme","memeTags","includes","filtered","sortByOldest","memesToFilter","sort","b","Date","uploaded","valueOf","length","slice","sortByNewest","sortByUpvotes","upvotes","timeNow","getTime","sortByTrending","uploadedADelta","uploadedBDelta","placeholder","onKeyUp","faSearch","defaultValue","GET_MEMES_REQUEST","GET_MEMES_SUCCESS","GET_MEMES_FAIL","Media","username","memeAuthor","imgURL","avatarURL","map","t","join","Modal","visible","setVisible","toggleVisible","MemeModal2","isActive","exitHandler","setMessage","handleOnClickFlag","memeId","wallet","position","bottom","right","padding","transform","color","faFlag","cursor","FacebookShareButton","url","window","faFacebook","TwitterShareButton","faTwitter","RedditShareButton","faReddit","Pagination","totalMemes","memesPerPage","paginate","currentPage","middle","lastPage","pageNums","setPageNums","pageNumbers","i","ceil","half","getNormal","least","_","leastMinus3","Array","from","Set","page","max","maxAbove3","Memes","memesState","getMemes","filteredMemes","setFilteredMemes","activeModal","setActiveModal","setCurrentPage","memesOnPage","setMemesOnPage","get","indexOfLastMeme","indexOfFirstMeme","columnsCountBreakPoints","350","750","900","1080","Meme","number","scrollTo","MemesPage","getState","Artist","lazy","Artists","setFiltered","artists","setArtists","filterArtists","artist","getArtists","justifyContent","fallback","bio","SettingsPage","setUser","setWallet","tagline","setTagline","getUserData","put","deleteUser","delete","paddingBottom","htmlFor","cols","rows","border","MemePage","match","setLoading","setMeme","setArtist","isLiked","setIsLiked","params","getMeme","meme_received","user_received","flagMeme","userId","getUser","likedMemes","likeHandler","memeData","tag","marginLeft","faHeart","stroke","strokeWidth","UserPage","memeLoading","setMemeLoading","userLoading","setUserLoading","getUserMemes","filterMemes","filtMemes","onClickHandler","marginRight","TermsPage","PrivacyPage","ReportsPage","flags","setFlags","getFlags","catch","removeFlag","flagId","removeUser","deleteMeme","flag","flagCount","AboutPage","PrivateRoute","rest","pathname","App","setBanned","checkBanned","isBanned","exact","path","component","reducer","combineReducers","action","getLikedMemes","storageUserInfo","getItem","initialState","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","likes","setLikes","likedMemesMeta","likesNew"],"mappings":"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","file":"static/js/main.4632c00b.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST: string = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS: string = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL: string = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT: string = 'USER_LOGOUT';\n\nexport const GET_LIKED_MEMES_REQUEST: string = 'GET_LIKED_MEMES_REQUEST';\nexport const GET_LIKED_MEMES_SUCCESS: string = 'GET_LIKED_MEMES_SUCCESS';\nexport const GET_LIKED_MEMES_FAIL: string = 'GET_LIKED_MEMES_FAIL';\n","import axios from 'axios';\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_REQUEST,\n  USER_LOGOUT,\n  GET_LIKED_MEMES_FAIL,\n  GET_LIKED_MEMES_REQUEST,\n  GET_LIKED_MEMES_SUCCESS,\n} from '../constants/userContants';\n\nexport const login = (code: any) => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/authorize',\n      {\n        code,\n      },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch: any) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const getLikedMemes = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch({\n      type: GET_LIKED_MEMES_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    }: any = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get('/api/users/@me/liked', config);\n\n    dispatch({\n      type: GET_LIKED_MEMES_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_LIKED_MEMES_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import './Container80.css';\n\nconst Container80 = ({ children }: any) => {\n  return <div className='container-80'>{children}</div>;\n};\n\nexport default Container80;\n","import React from 'react';\nimport './loader.css';\n\nconst Loader = () => {\n  return (\n    <div className='loader-iota'>\n      <img src='/images/loading.gif' alt='' />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../actions/userActions';\nimport Container80 from '../../components/Container80/Container80';\nimport Loader from '../../components/Loader/Loader';\n\nconst AuthSuccess = ({ location, history }: any) => {\n  const query: string = location.search;\n  const discordCode: string = query.split('code=')[1] || '';\n\n  const disptach: any = useDispatch();\n\n  useEffect(() => {\n    const auth = async () => {\n      await disptach(login(discordCode));\n      history.push('/');\n    };\n\n    auth();\n  }, []);\n\n  return (\n    <div>\n      <Container80>\n        <Loader />\n      </Container80>\n    </div>\n  );\n};\n\nexport default AuthSuccess;\n","import React from 'react';\nimport './StackGrid.css';\n\nconst StackGrid = ({ children }: any) => {\n  return <div className='stackGrid'>{children}</div>;\n};\n\nexport default StackGrid;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport axios from 'axios';\nimport Container80 from '../../components/Container80/Container80';\nimport Card from '../../components/Card/Card';\nimport StackGrid from '../../components/StackGrid/StackGrid';\nimport './NewMeme.css';\nimport InputTags from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\n\nconst NewMeme = ({ history }: any) => {\n  const userLogin: any = useSelector((state: RootState) => state.userLogin);\n  const { error, loading, userInfo }: any = userLogin;\n\n  const [tags, setTags]: any = useState<string[]>([]);\n  const [file, setFile] = useState({ file: { size: 0 }});\n  const [progress, setProgress] = useState(0);\n  const [uploading, setUploading] = useState(false);\n  const [memeError, setMemeError]: any = useState('');\n\n  const formSubmitHandler = async (e: any) => {\n    console.log(tags);\n    e.preventDefault();\n    if (file.file.size > 3 * 1024 * 1024) {\n      setMemeError('File is too big');\n    } else {\n      const formData: any = new FormData();\n      formData.append('image', file.file);\n      formData.append('memeTags', tags);\n\n      try {\n        setUploading(true);\n        const { data } = await axios.post('/api/memes', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${userInfo.token}`,\n          },\n          onUploadProgress: (data) => {\n            setProgress(Math.round((100 * data.loaded) / data.total));\n          },\n        });\n        history.push(`/meme/${data._id}`);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Container80>\n        <StackGrid>\n          <Card>\n            <form onSubmit={formSubmitHandler}>\n              {memeError && <div className=\"error-message\">{memeError}</div>}\n              {/* remove this input and replace with tags */}\n              <InputTags onChange={(tags) => setTags(tags)} value={tags} />\n              <p className=\"information-message\">press <i>tab</i> or <i>enter</i> to add a tag</p>\n              <input\n                type='file'\n                name='image'\n                id='image'\n                accept=\".png,.jpg,.jpeg,.gif\"\n                onChange={(e: any) =>\n                  setFile({\n                    file: e.target.files[0],\n                  })\n                }\n                style={{ marginBottom: 0 }}\n                required\n              />\n              <p className=\"information-message\">max file size 2MB, jpeg, png, gif only</p>\n              <input type='submit' value='upload' />\n              {uploading && (\n                <>\n                  <p>Uploading...</p>\n                  <div className='progressContainer'>\n                    <div\n                      className='bar'\n                      style={{ width: `${progress}%` }}\n                    ></div>\n                  </div>\n                </>\n              )}\n            </form>\n          </Card>\n        </StackGrid>\n      </Container80>\n    </div>\n  );\n};\n\nexport default NewMeme;\n","import { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../actions/userActions';\n\ninterface Props {\n  user: any;\n}\nexport const AvatarDropdown = (props: Props) => {\n  const { user } = props;\n\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  }\n\n  return (\n    <div className=\"navbar-item has-dropdown is-hoverable\">\n      <a className=\"navbar-link\">\n        <img src={user.avatar} alt=\"user-image\" className=\"image\" />\n      </a>\n      <div className=\"navbar-dropdown\">\n        <div className=\"navbar-item\">\n          <a href=\"/newmeme\">\n            New Meme\n          </a>\n        </div>\n        <div className=\"navbar-item\">\n          <a href={`/user/${user.id}`}>\n            Profile\n          </a>\n        </div>\n        <div className=\"navbar-item\">\n          <a href=\"/settings\">\n            Settings\n          </a>\n        </div>\n        <div className=\"navbar-item\">\n          <a href=\"/about\">\n            About\n          </a>\n        </div>\n        <div className=\"navbar-item\">\n          <a href=\"/terms\">\n            Terms\n          </a>\n        </div>\n        <div className=\"navbar-item\">\n          <a href=\"/privacy\">\n            Privacy\n          </a>\n        </div>\n        <div className=\"navbar-item\" onClick={logoutHandler}>\n          Logout\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\n\nexport const DiscordLoginButton = () => {\n  return (\n    <Link to=\"/authorize\">\n      <button className=\"button is-rounded is-link\" style={{marginTop: '12.5px'}}>\n        <FontAwesomeIcon icon={faDiscord} className=\"mr-1\" />\n        Login with Discord\n      </button>\n    </Link>\n  );\n};\n","import './IotaButton.css';\nimport { v4 as uuid4 } from 'uuid';\n\nconst IotaButton = ({ address, text, style }: any) => {\n  const identifier:any = uuid4();\n  return (\n    <>\n\n      <button\n        style={style}\n        className=\"better-iota-button\"\n        onClick={(e: any) => {\n      {/* @ts-ignore */}\n            const iotaButton: any = document.getElementById(identifier).shadowRoot.querySelector('ibtn-button-donation').shadowRoot.querySelector('button');\n            iotaButton.click()\n        }}\n      >{/* @ts-ignore */}\n      {text}\n      </button>\n      <div style={{ display: 'none' }}>\n        {/* @ts-ignore */}\n        <iota-button\n          id={identifier}\n          address={address}\n          currency='EUR'\n          label={text}\n          type='donation'\n        >\n          {/* @ts-ignore */}\n        </iota-button>\n      </div>\n    </>\n  );\n};\n\nIotaButton.defaultProps = {\n  text: 'Donate To Artist',\n  style: {}\n};\n\nexport default IotaButton;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AvatarDropdown } from \"./AvatarDropdown\";\nimport { DiscordLoginButton } from \"./DiscordLoginButton\";\nimport IotaButton from '../../components/IotaButton/IotaButton';\nimport \"./Header.css\";\n\ninterface IProps {\n  isLoggedIn?: any;\n}\nconst Navbar = ({ isLoggedIn }: IProps) => {\n  const [hamburgerOpen, setHamburgerOpen] = useState(false);\n  //const [classNames, setClassNames] = useState({menu: \"\", burger: \"\"})\n\n  const handleOnClick = () => {\n    setHamburgerOpen(!hamburgerOpen);\n  };\n\n  const isActiveClass = \"is-active\";\n  const classNames = hamburgerOpen ? isActiveClass : \"\";\n  return (\n    <nav\n      className=\"navbar is-warning is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container is-widescreen\">\n        <div className=\"navbar-brand\">\n          <Link to=\"/\" className=\"\">\n            <img\n              src=\"/images/logo.png\"\n              alt=\"IOTAMemes Logo\"\n              width=\"274\"\n              height=\"57\"\n            />\n          </Link>\n          <a\n            role=\"button\"\n            className={\"navbar-burger \" + classNames}\n            onClick={handleOnClick}\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className={\"navbar-menu \" + classNames}>\n          <div className=\"navbar-start\"></div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <Link to=\"/\" className=\"has-text-dark\" onClick={handleOnClick}>\n                Memes\n              </Link>\n\n            </div>\n            <div className=\"navbar-item\">\n              <Link\n                to=\"/artists\"\n                className=\"has-text-dark\"\n                onClick={handleOnClick}\n              >\n                Artists\n              </Link>\n            </div>\n            <div className=\"navbar-item\">\n              <Link to=\"/about\" className=\"has-text-dark\" onClick={handleOnClick}>\n                About\n              </Link>\n\n            </div>\n            <div className=\"navbar-item\">\n            </div>\n\n            {isLoggedIn ? (\n              <>\n                <IotaButton\n                  text=\"Donate to IOTA Memes\"\n                  address=\"iota1qplr8pw4tu24jdagkleqvp28rwsdfhx9cgcuaxvjaz5zd9gx9u50vg2v7md\"\n                  style={{\n                    height: '40px',\n                    fontSize: '1.1rem',\n                    background: '#ffac60',\n                    margin: '12.5px 10px',\n                    borderRadius: '20px',\n                  }}\n                />\n                <AvatarDropdown user={isLoggedIn} />\n              </>\n            ) : (\n              <DiscordLoginButton />\n            )}\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { useState, useEffect } from 'react';\nimport {\n  faArrowDown,\n  faArrowUp,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../store';\nimport { Link } from 'react-router-dom';\nimport './SearchBar.css';\nimport IotaButton from '../../IotaButton/IotaButton';\n\nexport const SearchBar = ({ memes, setMemes, showMeme, children }: any) => {\n  const [sortMethod, setSortMethod]: any = useState();\n  const [searchTag, setSearchTag]: any = useState();\n\n  const userLogin: any = useSelector((state: RootState) => state.userLogin);\n  const isLoggedIn = userLogin && userLogin.userInfo;\n\n\n  const filterByTag = async (e: any) => {\n    setSearchTag(e.target.value);\n    const filtered = await memes.filter((meme: any) =>\n      JSON.stringify(meme.memeTags).includes(e.target.value)\n    );\n    setMemes(filtered);\n  };\n\n  // sort by oldest\n  const sortByOldest = async () => {\n    let memesToFilter = memes;\n    await memesToFilter.sort((a: any, b: any) => { return new Date(a.uploaded).valueOf() - new Date(b.uploaded).valueOf(); })\n    memesToFilter = memesToFilter.length > 1 ? memesToFilter.slice(0, memesToFilter.length - 1) : memesToFilter;\n    setMemes(memesToFilter);\n  }\n\n  // sort by newest\n  const sortByNewest = async () => {\n    let memesToFilter = memes;\n    await memesToFilter.sort((a: any, b: any) => { return new Date(b.uploaded).valueOf() - new Date(a.uploaded).valueOf(); })\n    memesToFilter = memesToFilter.length > 1 ? memesToFilter.slice(0, memesToFilter.length - 1) : memesToFilter;\n    setMemes(memesToFilter);\n  }\n\n  // sort by most popular\n  const sortByUpvotes = async () => {\n    let memesToFilter = memes;\n      await memesToFilter.sort((a: any, b: any) => { return b.upvotes - a.upvotes })\n    memesToFilter = memesToFilter.length > 1 ? memesToFilter.slice(0, memesToFilter.length - 1) : memesToFilter;\n    setMemes(memesToFilter);\n  };\n\n  const timeNow = new Date().getTime();\n\n  const sortByTrending = async () => {\n    let memesToFilter = memes;\n    await memesToFilter.sort((a: any, b: any) => {\n      let uploadedADelta = (timeNow - new Date(a.uploaded).getTime())/86400000;\n      uploadedADelta = uploadedADelta > 1 ? uploadedADelta : 1;\n      let uploadedBDelta = (timeNow - new Date(b.uploaded).getTime())/86400;\n      uploadedBDelta = uploadedBDelta > 1 ? uploadedBDelta : 1;\n      console.log(uploadedBDelta, b.uploaded, timeNow, new Date(b.uploaded).getTime())\n      return b.upvotes/uploadedBDelta - a.upvotes/uploadedADelta\n    });\n    setMemes(memesToFilter)\n  }\n\n  useEffect(() => {\n    switch (sortMethod) {\n      case 'newest':\n        sortByNewest();\n        return;\n      case 'oldest':\n        sortByOldest();\n        return;\n      case 'upvoted':\n        sortByUpvotes();\n        return;\n      case 'trending':\n        sortByTrending();\n        return;\n    }\n  }, [sortMethod])\n\n  return (\n    <nav className='search-container'>\n      {isLoggedIn ? (\n        <>\n        {showMeme ? (\n        <Link to=\"/newmeme\">\n          <button className=\"uploadMeme\">+ NEW MEME</button>\n        </Link>) : (\n            {children}\n        )}\n        </>\n      ) : (\n        <Link to=\"/about\">\n            <IotaButton address=\"iota1qplr8pw4tu24jdagkleqvp28rwsdfhx9cgcuaxvjaz5zd9gx9u50vg2v7md\" text='Donate to IOTA Memes' style={{borderRadius: '25px'}} />\n        </Link>\n      )}\n      <div className='control has-icons-right'>\n        <input\n          type='text'\n          className='input is-rounded meme-search'\n          placeholder='Search for memes'\n          onKeyUp={filterByTag}\n        />\n        <span className='icon is-small is-right'>\n          <FontAwesomeIcon icon={faSearch} />\n          {/* <i className=\"fas fa-envolope\"></i> */}\n        </span>\n      </div>\n      <select className=\"meme-select\" onChange={(e: any) => { setSortMethod(e.target.value) }} defaultValue=\"newest\">\n        <option value='newest'>Newest</option>\n        <option value='trending'>Trending</option>\n        <option value='oldest'>Oldest</option>\n        <option value='upvoted'>Most Popular</option>\n      </select>\n    </nav>\n  );\n};\n\nSearchBar.defaultProps = {\n    showMeme: true\n}\n","export const GET_MEMES_REQUEST = 'GET_MEMES_REQUEST';\nexport const GET_MEMES_SUCCESS = 'GET_MEMES_SUCCESS';\nexport const GET_MEMES_FAIL = 'GET_MEMES_FAIL';\n","import {\n  faFacebook,\n  faReddit,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faHeart, faReply, faRetweet } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  FacebookIcon,\n  FacebookShareButton,\n  RedditIcon,\n  RedditShareButton,\n  TwitterIcon,\n  TwitterShareButton,\n} from \"react-share\";\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  user: any;\n  meme: any;\n}\nexport const Media = (props: Props) => {\n  const { user, meme } = props;\n  const { avatar, username } = user;\n  const { imgURL, memeAuthor, memeTags, upvotes, id } = meme;\n\n  const avatarURL =\n    avatar || \"https://bulma.io/images/placeholders/128x128.png\";\n\n  return (\n    <article className=\"media\">\n      <figure className=\"media-left\">\n        <p className=\"image is-64x64\">\n          <img src={avatarURL} />\n        </p>\n      </figure>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          <p style={{width: '80%'}}>\n              <Link to={`/user/${memeAuthor}`}><strong>{username}</strong></Link>\n            <br />\n            {(memeTags as string[])?.map((t) => `#${t}`).join(\", \")}\n          </p>\n        </div>\n      </div>\n    </article>\n  );\n};\n","import './Modal.css';\n\n\nconst Modal = ({ visible, setVisible, children }: any) => {\n  \n  const toggleVisible = () => {\n    setVisible(false);\n  }; \n\n  return (\n    <>\n      <div className={ visible ? 'backdrop' : 'hidden' } onClick={toggleVisible}>\n      </div>\n      <div className={ visible ? 'modal__center' : 'hidden' }>\n          <div className=\"closeButtonContainer\">\n              <img onClick={toggleVisible} src=\"/images/close.svg\" />\n          </div>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport { Media } from \"./Media\";\nimport {\n  faFacebook,\n  faReddit,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faFlag } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useSelector } from 'react-redux';\nimport {\n  FacebookShareButton,\n  RedditShareButton,\n  TwitterShareButton,\n} from \"react-share\";\nimport Modal from '../../../components/Modal/Modal';\nimport \"./modal.css\";\nimport { RootState } from '../../../store';\nimport axios from \"axios\";\nimport IotaButton from '../../IotaButton/IotaButton';\n\ninterface Props {\n  meme: Record<string, any>;\n  isActive: boolean;\n  exitHandler: () => void;\n}\nexport const MemeModal2 = ({ meme, isActive, exitHandler }: Props) => {\n  const { imgURL, memeAuthor, memeTags, upvotes, id, user } = meme;\n  const [visible, setVisible]: any = useState(false);\n  const [message, setMessage]: any = useState('flagging meme...');\n\n  const src = imgURL || \"https://bulma.io/images/placeholders/1280x960.png\";\n  const classNames = isActive ? \"is-active\" : \"\";\n\n    const userLogin = useSelector((state: RootState) => state.userLogin);\n  const { userInfo }: any = userLogin ? userLogin : null;\n\n  /* -------------------- flagging stuff -------------------- */\n\n  const handleOnClickFlag = async () => {\n    if (userInfo) {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${userInfo.token}`\n        }\n      }\n      try {\n        const flag = await axios.post('/api/flags', { memeId: id }, config)\n        setVisible(true);\n        setMessage('Reported meme successfully :)')\n      } catch (error) {\n        setVisible(true)\n        setMessage(\"unable to create new report for this meme, this probably means that you have already reported this meme\")\n      }\n    } else {\n      setVisible(true);\n      setMessage('You need to log in to report a meme');\n    }\n  }\n\n  return (\n    <div className={\"modal \" + classNames}>\n      <Modal visible={visible} setVisible={setVisible}>\n        {message}\n      </Modal>\n      <div className=\"modal-background\" onClick={exitHandler}></div>\n      <div className=\"modal-content\">\n        <p className=\"image\" style={{ background: \"white\" }}>\n          <img src={src} alt=\"\" />\n        </p>\n        <div className=\"modal-card-foot\">\n          <Media user={user} meme={meme} />\n          <div className=\"iota-button-container\">\n            { user.wallet && <IotaButton address={user.wallet} style={{display: 'block !important'}} />}\n          </div>\n          <nav\n            className=\"level is-mobile\"\n            style={{\n              position: \"absolute\",\n              bottom: 0,\n              right: 0,\n              padding: \"15px\",\n            }}\n          >\n            <div className=\"level-right\" style={{transform: 'translateY(7px)'}}>\n              <div className=\"level-item flag\">\n                <FontAwesomeIcon\n                  color=\"#cacaca\"\n                  icon={faFlag}\n                  className=\"icon is-medium hover-grey\"\n                  style={{ marginBottom: \"0.25rem\", cursor: \"pointer\", transform: 'translateY(-75px) translateX(130px)', height: '20px'}}\n                  onClick={handleOnClickFlag}\n                />\n              </div>\n              <a className=\"level-item\">\n                <span>\n                  <FacebookShareButton\n                    url={`${window.location.href}meme/${id}`}\n                  >\n                    <FontAwesomeIcon\n                      icon={faFacebook}\n                      className=\"icon is-medium\"\n                    />\n                  </FacebookShareButton>\n                </span>\n              </a>\n              <a className=\"level-item\">\n                <span>\n                  <TwitterShareButton url={`${window.location.href}meme/${id}`}>\n                    <FontAwesomeIcon\n                      icon={faTwitter}\n                      className=\"icon is-medium\"\n                    />\n                  </TwitterShareButton>\n                </span>\n              </a>\n              <a className=\"level-item\">\n                <span>\n                  <RedditShareButton url={`${window.location.href}meme/${id}`}>\n                    <FontAwesomeIcon\n                      icon={faReddit}\n                      className=\"icon is-medium\"\n                    />\n                  </RedditShareButton>\n                </span>\n              </a>\n            </div>\n          </nav>\n        </div>\n      </div>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={exitHandler}\n      ></button>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./pagination.css\";\n\ninterface PageNumbers {\n\tmiddle: number[];\n\tlastPage: number;\n}\nconst Pagination = ({\n\ttotalMemes,\n\tmemesPerPage,\n\tpaginate,\n\tcurrentPage,\n}: {\n\ttotalMemes: number;\n\tmemesPerPage: number;\n\tpaginate: (number: number) => any;\n\tcurrentPage: number;\n}) => {\n\tconst [pageNums, setPageNums] = useState<PageNumbers>({\n\t\tmiddle: [],\n\t\tlastPage: 0,\n\t});\n\tconst getNormal = (lastPage: number) => {\n\t\tconst half = lastPage / 2;\n\t\tconst below = half - 1 > 1 ? half - 1 : -1;\n\t\tconst above = half + 1 > 1 ? half + 1 : -1;\n\t\treturn [below, half, above];\n\t};\n\n\tconst addLess = () => {\n\t\tconst [least, ..._] = pageNums.middle;\n\t\tconst leastMinus3 = least - 3 > 1 ? least - 3 : 1;\n\t\tif (_.includes(3)) return;\n\t\tconst middle = Array.from(\n\t\t\tnew Set([leastMinus3, leastMinus3 + 1, leastMinus3 + 2, ..._]),\n\t\t);\n\n\t\tsetPageNums({\n\t\t\t...pageNums,\n\t\t\tmiddle: middle.slice(0, 7),\n\t\t});\n\t};\n\tconst addMore = () => {\n\t\tconst max = pageNums.middle[pageNums.middle.length - 1];\n\t\tconst maxAbove3 = max + 3 > 1 ? max + 3 : 1;\n\t\tif (pageNums.middle.includes(pageNums.lastPage - 1)) return;\n\t\tconst middle = Array.from(\n\t\t\tnew Set([...pageNums.middle, maxAbove3 - 2, maxAbove3 - 1, maxAbove3]),\n\t\t);\n\n\t\tsetPageNums({\n\t\t\t...pageNums,\n\t\t\tmiddle: middle.slice(Math.max(middle.length - 7, 0)),\n\t\t});\n\t};\n\n\tconst nextPage = () => {\n\t\tconst next = currentPage + 1;\n\t\tif (next > pageNums.lastPage) return;\n\t\tpaginate(currentPage + 1);\n\t};\n\tconst prevPage = () => {\n\t\tconst next = currentPage - 1;\n\t\tif (next < 1) return;\n\t\tpaginate(currentPage - 1);\n\t};\n\n\tuseEffect(() => {\n\t\tlet pageNumbers: number[] = [];\n\t\tfor (let i = 1; i <= Math.ceil(totalMemes / memesPerPage); i++) {\n\t\t\tpageNumbers.push(i);\n\t\t}\n\n\t\tconst middle = getNormal(pageNums.lastPage);\n\t\tsetPageNums({ middle: middle, lastPage: pageNumbers.length });\n\t}, [pageNums.lastPage]);\n\tuseEffect(() => {\n\t\tconsole.log(pageNums);\n\t}, [pageNums]);\n\n\treturn (\n\t\t<nav\n\t\t\tclassName=\"pagination is-centered my__pagination\"\n\t\t\trole=\"navigation\"\n\t\t\taria-label=\"pagination\"\n\t\t\tstyle={{ marginTop: \"50px\" }}\n\t\t>\n\t\t\t<a className=\"pagination-previous my__pagination\" onClick={prevPage}>\n\t\t\t\tPrevious\n\t\t\t</a>\n\t\t\t<a className=\"pagination-next my__pagination\" onClick={nextPage}>\n\t\t\t\tNext page\n\t\t\t</a>\n\t\t\t<ul className=\"pagination-list \">\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"pagination-link my__pagination\"\n\t\t\t\t\t\taria-label=\"Goto page 1\"\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tpaginate(1);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t1\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li onClick={addLess}>\n\t\t\t\t\t<span className=\"pagination-ellipsis\">&hellip;</span>\n\t\t\t\t</li>\n\t\t\t\t{pageNums.middle?.map((page) => (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"pagination-link my__pagination\"\n\t\t\t\t\t\t\taria-label={\"Goto page \" + page}\n\t\t\t\t\t\t\tkey={page}\n\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\tpaginate(page);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{page}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t\t<li onClick={addMore}>\n\t\t\t\t\t<span className=\"pagination-ellipsis\">&hellip;</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"pagination-link my__pagination\"\n\t\t\t\t\t\taria-label={\"Goto page \" + pageNums.lastPage}\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tpaginate(pageNums.lastPage);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{pageNums.lastPage}\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t);\n\n\t/*\n\treturn (\n\t\t<div className=\"pagination\">\n\t\t\t{pageNums.map((number: number) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={number}\n\t\t\t\t\tclassName=\"pageNum\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tpaginate(number);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{number}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n   */\n};\n\nexport default Pagination;\n","import { useState, useEffect } from \"react\";\n// import Meme from \"./Meme/Meme\";\nimport \"./Memes.css\";\nimport { SearchBar } from \"./SearchBar/SearchBar\";\nimport { useSelector, useDispatch } from \"react-redux\";\n//@ts-ignore\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport { getMemes } from \"../../actions/memeActions\";\nimport { RootState } from \"../../store\";\nimport Loader from \"../Loader/Loader\";\nimport { MemeModal2 } from \"./Modal/Modal2\";\nimport Meme from \"./Meme/Meme\";\nimport Pagination from \"../Pagination/Pagination\";\n\nconst Memes = () => {\n  const dispatch = useDispatch();\n\n  const memesState = useSelector((state: RootState) => state.getMemes);\n  const { error, loading, memes }: any = memesState;\n\n  const [filteredMemes, setFilteredMemes]: any = useState(memes);\n  const [activeModal, setActiveModal] = useState<Record<string, any>>({\n    user: {},\n  });\n\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [memesPerPage, setMemesPerPage] = useState<number>(20);\n  const [memesOnPage, setMemesOnPage] = useState<any>();\n\n  const handleOnClick = (meme: Record<string, any>) => {\n    setActiveModal(meme);\n  };\n  const resetActiveModal = () => {\n    setActiveModal({ memeTags: [], user: {} });\n  };\n\n  useEffect(() => {\n    dispatch(getMemes());\n  }, []);\n\n  useEffect(() => {\n    const indexOfLastMeme = currentPage * memesPerPage;\n    const indexOfFirstMeme = indexOfLastMeme - memesPerPage;\n\n    setMemesOnPage(memes ? memes.slice(indexOfFirstMeme, indexOfLastMeme) : []);\n  }, [memes, filteredMemes]);\n\n  const paginate = (number: number) => {\n    setCurrentPage(number);\n    setFilteredMemes([]);\n    const indexOfLastMeme = currentPage * memesPerPage;\n    const indexOfFirstMeme = indexOfLastMeme - memesPerPage;\n\n    setMemesOnPage(memes.slice(indexOfFirstMeme, indexOfLastMeme));\n    console.log(\n      memes.slice(indexOfFirstMeme, indexOfLastMeme),\n      indexOfLastMeme,\n      indexOfFirstMeme\n    );\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div className=\"container is-widescreen mt-5\">\n      <SearchBar memes={memes} setMemes={setFilteredMemes} />\n      {loading ? (\n        <Loader />\n      ) : memesOnPage ? (\n        <>\n          {\n            <MemeModal2\n              meme={activeModal}\n              isActive={activeModal.id ? true : false}\n              exitHandler={resetActiveModal}\n            />\n          }\n          <ResponsiveMasonry\n            columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3, 1080: 4 }}\n          >\n            <Masonry>\n              {memesOnPage.map((meme: any) => (\n                <Meme\n                  id={meme._id}\n                  memeAuthor={meme.memeAuthor}\n                  imgURL={meme.imgURL}\n                  upvotes={meme.upvotes}\n                  memeTags={meme.memeTags}\n                  onClick={handleOnClick}\n                />\n              ))}\n            </Masonry>\n          </ResponsiveMasonry>\n          <Pagination\n            totalMemes={memes.length}\n            memesPerPage={memesPerPage}\n            paginate={paginate}\n            currentPage={currentPage}\n          />\n        </>\n      ) : (\n        <h1>{error}</h1>\n      )}\n    </div>\n  );\n};\n\nexport default Memes;\n","import axios from 'axios';\nimport {\n  GET_MEMES_FAIL,\n  GET_MEMES_SUCCESS,\n  GET_MEMES_REQUEST,\n} from '../constants/memeContants';\n\nexport const getMemes = () => async (dispatch: any) => {\n  try {\n    dispatch({\n      type: GET_MEMES_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.get('/api/memes', config);\n\n    data.sort((a: any, b: any) => {\n      return new Date(b.uploaded).valueOf() - new Date(a.uploaded).valueOf();\n    })\n\n    dispatch({\n      type: GET_MEMES_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_MEMES_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from 'react';\nimport Container80 from '../../components/Container80/Container80';\nimport Memes from '../../components/Memes/Memes';\nimport { useDispatch } from 'react-redux';\nimport { getLikedMemes } from '../../actions/userActions';\n\nconst MemesPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getLikedMemes());\n  }, [dispatch]);\n\n  return <Memes />;\n};\n\nexport default MemesPage;\n","import React, { useState, useEffect, Suspense, lazy } from \"react\";\nimport Container80 from \"../../components/Container80/Container80\";\nimport axios from \"axios\";\nimport StackGrid from \"react-stack-grid\";\nimport {\n  faArrowDown,\n  faArrowUp,\n  faSearch,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n//@ts-ignore\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nconst Artist = lazy(() => import(\"./Artist/Artist\"));\n\nconst Artists = () => {\n  const [filtered, setFiltered] = useState([]);\n  const [artists, setArtists] = useState([]);\n\n  const filterArtists = async (e: any) => {\n    setFiltered(\n      artists.filter((artist: any) => artist.username.includes(e.target.value))\n    );\n  };\n\n  useEffect(() => {\n    const getArtists = async () => {\n      const config = { headers: { \"Content-Type\": \"application/json\" } };\n      const { data } = await axios.get(\"/api/users\", config);\n      setFiltered(data);\n      setArtists(data);\n    };\n    getArtists();\n  }, []);\n  return (\n    <>\n      <div\n        className=\"search-container\"\n        style={{ justifyContent: \"center\", marginTop: \"15px\" }}\n      >\n        <div className=\"control has-icons-right\">\n          <input\n            type=\"text\"\n            className=\"input is-rounded meme-search\"\n            placeholder=\"Search Artists\"\n            style={{ width: \"65vw\" }}\n            onKeyUp={filterArtists}\n          />\n          <span className=\"icon is-small is-right\">\n            <FontAwesomeIcon icon={faSearch} />\n            {/* <i className=\"fas fa-envolope\"></i> */}\n          </span>\n        </div>\n      </div>\n\n      <ResponsiveMasonry\n        columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3, 1080: 4 }}\n      >\n        <Masonry>\n          {filtered.map((artist: any) => (\n            <Suspense key={artist.id} fallback={<div>loading...</div>}>\n              <Artist\n                username={artist.username}\n                upvotes={artist.upvotes}\n                bio={artist.bio}\n                avatar={artist.avatar}\n                // key={artist.id}\n                totalMemes={artist.totalMemes}\n                id={artist.id}\n              />\n            </Suspense>\n          ))}\n        </Masonry>\n      </ResponsiveMasonry>\n      {/* <StackGrid columnWidth={290} monitorImagesLoaded={true}>\n          {filtered.map((artist: any) => (\n            <Artist\n              username={artist.username}\n              upvotes={artist.upvotes}\n              bio={artist.bio}\n              avatar={artist.avatar}\n              key={artist.id}\n              totalMemes={artist.totalMemes}\n              id={artist.id}\n            />\n          ))}\n        </StackGrid> */}\n    </>\n  );\n};\n\nexport default Artists;\n","import { useState, useEffect } from 'react';\nimport Container80 from '../../components/Container80/Container80';\nimport Card from '../../components/Card/Card';\nimport StackGrid from '../../components/StackGrid/StackGrid';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport './SettingsPage.css';\nimport { RootState } from '../../store';\nimport { logout } from '../../actions/userActions';\nimport { useDispatch } from 'react-redux';\nimport Modal from '../../components/Modal/Modal';\n\nconst SettingsPage = ({ history }: any) => {\n  const [user, setUser]: any = useState();\n  const [message, setMessage]: any = useState();\n  const [wallet, setWallet]: any = useState();\n  const [tagline, setTagline]: any = useState();\n  const [visible, setVisible]: any = useState(false);\n\n  const userLogin = useSelector((state: RootState) => state.userLogin);\n  const { userInfo }: any = userLogin;\n\n  const dispatch = useDispatch();\n\n  const getUserData = async () => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const user = await axios.get(`/api/users/${userInfo.id}`);\n      setUser(user);\n      console.log(user);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    history.push('/')\n  }\n\n  const formSubmitHandler = async (e: any) => {\n    try {\n      e.preventDefault();\n      const config: any = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const { data }: any = await axios.put(\n        '/api/users',\n        {\n          wallet,\n          tagline,\n        },\n        config\n      );\n      setMessage('updated successfully');\n    } catch (error) {\n      console.error(error);\n      setMessage('Unable to update :(');\n    }\n  };\n\n  const deleteUser = async () => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${userInfo.token}`\n        }\n      };\n      const deletedUser = await axios.delete('/api/users', config);\n      logoutHandler();\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  return (\n    <Container80>\n      <StackGrid>\n        <Modal visible={visible} setVisible={setVisible}>\n          <h1>CONFIRM ACCOUNT DELETION</h1>\n          <p style={{ padding: '10px 0' }}>You are about to delete your account for IotaMemes.com.</p>\n          <p style={{ paddingBottom: '10px' }}>All of your memes will remain live and your connected user information will be removed.</p>\n          <button className=\"confirm\" onClick={deleteUser}>DELETE</button>\n        </Modal>\n        <div className='cardContainer'>\n          <Card>\n            <div className='settings'>\n              <div className='formBody'>\n                <form style={{ padding: 0 }} onSubmit={formSubmitHandler}>\n                  {message && <div className='message'>{message}</div>}\n                  <label htmlFor='walletAddress'>IOTA Wallet Address</label>\n                  <br />\n                  <input\n                    type='text'\n                    id='walletAddress'\n                    placeholder='Iota Wallet Address'\n                    defaultValue={user && user.data.wallet}\n                    onChange={(e) => setWallet(e.target.value)}\n                  />\n                  <br />\n                  <label htmlFor='tagline'>Tagline</label>\n                  <br />\n                  <textarea\n                    id='tagline'\n                    cols={30}\n                    rows={10}\n                    defaultValue={user && user.data.bio}\n                    onChange={(e) => setTagline(e.target.value)}\n                  ></textarea>\n                  <br />\n                  <input type='submit' value='UPDATE' />\n                  <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <button type='button' style={{ padding: '10px 30px', background: '#f56642', color: 'white', border: 'none', borderRadius: '5px', margin: '5px', marginTop: '20px' }} onClick={(e) => {setVisible(true)}}>DELETE USER ACCOUNT</button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </StackGrid>\n    </Container80>\n  );\n};\n\nexport default SettingsPage;\n","import { useEffect, useState } from \"react\";\nimport Container80 from \"../../components/Container80/Container80\";\nimport Card from \"../../components/Card/Card\";\nimport axios from \"axios\";\nimport Loader from \"../../components/Loader/Loader\";\nimport \"./MemePage.css\";\nimport {\n\tFacebookShareButton,\n\tRedditShareButton,\n\tTwitterShareButton,\n} from \"react-share\";\nimport {\n\tfaFacebook,\n\tfaReddit,\n\tfaTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faFlag, faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { useSelector } from \"react-redux\";\nimport Modal from \"../../components/Modal/Modal\";\nimport IotaButton from \"../../components/IotaButton/IotaButton\";\n\nimport { FacebookIcon, RedditIcon, TwitterIcon } from \"react-share\";\nimport { RootState } from \"../../store\";\n\nconst MemePage = ({ match }: any) => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [meme, setMeme]: any = useState({});\n\tconst [artist, setArtist]: any = useState();\n\tconst [visible, setVisible]: any = useState(false);\n\tconst [message, setMessage]: any = useState(\"flagging meme\");\n\tconst [isLiked, setIsLiked] = useState<boolean>(false);\n\tconst [user, setUser] = useState<Record<string, any>>({});\n\n\t/*\n\tconst likedMemesMeta: any = useSelector(\n\t\t(state: RootState) => state.getLikedMemes,\n\t);\n\tconsole.log(\"likedMemesMeta:\", likedMemesMeta);\n  */\n\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\tconsole.log(\"paramsId\", match.params.id);\n\n\tconst getMeme = async () => {\n\t\tconst meme_received: any = await axios.get(\n\t\t\t`/api/memes/${match.params.id}`,\n\t\t\tconfig,\n\t\t);\n\t\tsetMeme(meme_received.data);\n\t\tconst user_received = await axios.get(\n\t\t\t`/api/users/${meme_received.data.memeAuthor}`,\n\t\t\tconfig,\n\t\t);\n\t\tsetArtist(user_received.data);\n\t\tsetLoading(false);\n\t};\n\n\tconst userLogin = useSelector((state: RootState) => state.userLogin);\n\tconst { userInfo }: any = userLogin ? userLogin : null;\n\n\t/* -------------------- flagging stuff -------------------- */\n\n\tconst flagMeme = async () => {\n\t\tif (userInfo) {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\n\t\t\t\t},\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tconst flag = await axios.post(\n\t\t\t\t\t\"/api/flags\",\n\t\t\t\t\t{ memeId: match.params.id },\n\t\t\t\t\tconfig,\n\t\t\t\t);\n\t\t\t\tsetVisible(true);\n\t\t\t\tsetMessage(\"Reported meme successfully :)\");\n\t\t\t} catch (error) {\n\t\t\t\tsetVisible(true);\n\t\t\t\tsetMessage(\n\t\t\t\t\t\"unable to create new report for this meme, this probably means that you have already reported this meme\",\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tsetVisible(true);\n\t\t\tsetMessage(\"You need to log in to report a meme\");\n\t\t}\n\t};\n\n\t/* ------------------ end flagging stuff ------------------ */\n\n\tuseEffect(() => {\n\t\tgetMeme();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst getUser = async (userId: string) => {\n\t\t\tconst { data }: any = await axios.get(`/api/users/${userId}`);\n\t\t\tsetUser(data);\n\t\t};\n\t\tgetUser(meme?.memeAuthor);\n\t}, [meme]);\n\n\tuseEffect(() => {\n\t\tconsole.log(\"user:\", user);\n\t\tsetIsLiked(user?.likedMemes?.includes(match.params.id));\n\t}, [user]);\n\n\tconst likeHandler = async () => {\n\t\tconst id = match.params.id;\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst memeData: any = await axios.get(\n\t\t\t\t`/api/memes/toggleLike/${id}`,\n\t\t\t\tconfig,\n\t\t\t);\n\t\t\tsetIsLiked(memeData.data.likedMemes.includes(id));\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"memePage\">\n\t\t\t{loading ? (\n\t\t\t\t<Loader />\n\t\t\t) : meme && artist ? (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"artist\">\n\t\t\t\t\t\t<img src={artist.avatar} alt={artist.username} />\n\t\t\t\t\t\t<div className=\"username\">{artist.username}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<img src={meme.imgURL} className=\"meme-img\" />\n\t\t\t\t\t<div className=\"tags\">\n\t\t\t\t\t\t{meme &&\n\t\t\t\t\t\t\tmeme.memeTags.map((tag: string) => (\n\t\t\t\t\t\t\t\t<span className=\"tag\">#{tag} </span>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"iotaButton\" style={{ marginLeft: \"30px\" }}>\n\t\t\t\t\t\t{artist.wallet && <IotaButton address={artist.wallet} />}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottomMeme\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"level-right\"\n\t\t\t\t\t\t\tstyle={{ transform: \"translateY(7px)\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"level-item\">\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\tcolor=\"#cacaca\"\n\t\t\t\t\t\t\t\t\ticon={faFlag}\n\t\t\t\t\t\t\t\t\tclassName=\"icon is-medium hover-grey\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tmarginBottom: \"0.25rem\",\n\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\ttransform: \"translateY(-75px) translateX(130px)\",\n\t\t\t\t\t\t\t\t\t\theight: \"20px\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={flagMeme}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a className=\"level-item\">\n\t\t\t\t\t\t\t\t{isLiked ? (\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\ticon={faHeart}\n\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: \"30px\" }}\n\t\t\t\t\t\t\t\t\t\tonClick={likeHandler}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\ticon={faHeart}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \"30px\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"rgba(0,0,0,0)\",\n\t\t\t\t\t\t\t\t\t\t\tstroke: \"black\",\n\t\t\t\t\t\t\t\t\t\t\tstrokeWidth: \"30px\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={likeHandler}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a className=\"level-item\">\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<FacebookShareButton\n\t\t\t\t\t\t\t\t\t\turl={`${window.location.href}meme/${meme.id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\t\ticon={faFacebook}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon is-medium\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FacebookShareButton>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a className=\"level-item\">\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<TwitterShareButton\n\t\t\t\t\t\t\t\t\t\turl={`${window.location.href}meme/${meme.id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\t\ticon={faTwitter}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon is-medium\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</TwitterShareButton>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a className=\"level-item\">\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<RedditShareButton\n\t\t\t\t\t\t\t\t\t\turl={`${window.location.href}meme/${meme.id}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\t\ticon={faReddit}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon is-medium\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</RedditShareButton>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<div className=\"message\">Unable to load meme </div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default MemePage;\n","import Container80 from \"../../components/Container80/Container80\";\nimport axios from \"axios\";\nimport { useState, useEffect, Suspense, lazy } from \"react\";\nimport Loader from \"../../components/Loader/Loader\";\n//@ts-ignore\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport StackGrid from \"react-stack-grid\";\nimport \"./UserPage.css\";\nimport { MemeModal2 } from \"../../components/Memes/Modal/Modal2\";\nimport {\n  faArrowDown,\n  faArrowUp,\n  faSearch,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useSelector } from \"react-redux\";\nimport IotaButton from \"../../components/IotaButton/IotaButton\";\nimport { RootState } from \"../../store\";\nimport { Link } from \"react-router-dom\";\nconst Meme = lazy(() => import(\"../../components/Memes/Meme/Meme\"));\n\nconst UserPage = ({ match }: any) => {\n  const [memeLoading, setMemeLoading]: any = useState(true);\n  const [userLoading, setUserLoading]: any = useState(true);\n  const [filteredMemes, setFilteredMemes]: any = useState([]);\n\n  const userLogin = useSelector((state: RootState) => state.userLogin);\n  const { userInfo }: any = userLogin ? userLogin : false;\n\n  const [activeModal, setActiveModal]: any = useState({\n    user: {},\n    memeTags: [],\n  });\n  const [memes, setMemes]: any = useState(null);\n  const [user, setUser]: any = useState(null);\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const getUserMemes = async () => {\n    const { data } = await axios.get(\n      `/api/users/${match.params.id}/memes`,\n      config\n    );\n    setMemes(data);\n    setFilteredMemes(data);\n    setMemeLoading(false);\n  };\n\n  const filterMemes = async (e: any) => {\n    const filtMemes = memes.filter((meme: any) =>\n      JSON.stringify(meme.memeTags).includes(e.target.value)\n    );\n    setFilteredMemes(filtMemes);\n  };\n\n  const getUserData = async () => {\n    const { data } = await axios.get(`/api/users/${match.params.id}`, config);\n    setUser(data);\n    setUserLoading(false);\n  };\n\n  useEffect(() => {\n    getUserMemes();\n    getUserData();\n  }, []);\n\n  const resetActiveModal = () => setActiveModal({ user: {}, memeTags: [] });\n  const onClickHandler = (meme: any) => {\n    setActiveModal(meme);\n  };\n  return (\n    <Container80>\n      {memeLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {userLoading ? (\n            <Loader />\n          ) : (\n            <div className=\"user-info-container\">\n              <div className=\"user-info\">\n                <div className=\"user-data\">\n                  <img src={user.avatar} />\n                  <div>\n                    <h2>{user.username}</h2>\n                    <div className=\"user-meta\">{user.upvotes} Likotas</div>\n                  </div>\n                </div>\n                <p className=\"user-bio\">{user.bio}</p>\n              </div>\n            </div>\n          )}\n          {\n            <MemeModal2\n              meme={activeModal}\n              isActive={activeModal.id ? true : false}\n              exitHandler={resetActiveModal}\n            />\n          }\n          <div\n            className=\"search-container\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"15px\",\n            }}\n          >\n            {!userLoading && userInfo && userInfo.id === match.params.id ? (\n              <Link to=\"/newmeme\" style={{ marginRight: \"15px\" }}>\n                <button className=\"uploadMeme\">+ NEW MEME</button>\n              </Link>\n            ) : (\n              <>\n                {!userLoading && user.wallet && (\n                  <IotaButton\n                    address={user.wallet}\n                    style={{\n                      fontSize: \"1rem\",\n                      height: \"40px\",\n                      marginRight: \"20px\",\n                      display: \"block !important\",\n                    }}\n                  />\n                )}\n              </>\n            )}\n            <div className=\"control has-icons-right\">\n              <input\n                type=\"text\"\n                className=\"input is-rounded meme-search\"\n                placeholder=\"Search Artists\"\n                style={{ width: \"35vw\" }}\n                onKeyUp={filterMemes}\n              />\n              <span className=\"icon is-small is-right\">\n                <FontAwesomeIcon icon={faSearch} />\n                {/* <i className=\"fas fa-envolope\"></i> */}\n              </span>\n            </div>\n          </div>\n          <ResponsiveMasonry\n            columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3, 1080: 4 }}\n          >\n            <Masonry>\n              {filteredMemes.map((meme: any) => (\n                <Suspense key={meme._id} fallback={<div>loading...</div>}>\n                  <Meme\n                    id={meme._id}\n                    memeAuthor={meme.memeAuthor}\n                    imgURL={meme.imgURL}\n                    upvotes={meme.upvotes}\n                    memeTags={meme.memeTags}\n                    onClick={onClickHandler}\n                  />\n                </Suspense>\n              ))}\n            </Masonry>\n          </ResponsiveMasonry>\n\n          {/* <StackGrid columnWidth={300} monitorImagesLoaded={true}>\n            {filteredMemes.map((meme: any) => (\n              <Meme\n                id={meme._id}\n                key={meme._id}\n                memeAuthor={meme.memeAuthor}\n                imgURL={meme.imgURL}\n                upvotes={meme.upvotes}\n                memeTags={meme.memeTags}\n                onClick={onClickHandler}\n              />\n            ))}\n          </StackGrid> */}\n        </>\n      )}\n    </Container80>\n  );\n};\n\nexport default UserPage;\n","import React from 'react';\nimport Container80 from '../../components/Container80/Container80';\nimport Card from '../../components/Card/Card';\n\nconst TermsPage = () => {\n  return (\n    <Container80>\n      <Card>\n        <div style={{ padding: '20px' }}>\n          <h2><strong>Terms and Conditions</strong></h2>\n      <p>Welcome to IOTA MEMES!</p>\n    <p>These terms and conditions outline the rules and regulations for the use of IOTA MEMES's Website, located at iotamemes.com.</p>\n    <p>By accessing this website we assume you accept these terms and conditions. Do not continue to use IOTA MEMES if you do not agree to take all of the terms and conditions stated on this page.</p>\n    <p>The following terminology applies to these Terms and Conditions, Privacy Statement and Disclaimer Notice and all Agreements: \"Client\", \"You\" and \"Your\" refers to you, the person log on this website and compliant to the Company’s terms and conditions. \"The Company\", \"Ourselves\", \"We\", \"Our\" and \"Us\", refers to our Company. \"Party\", \"Parties\", or \"Us\", refers to both the Client and ourselves. All terms refer to the offer, acceptance and consideration of payment necessary to undertake the process of our assistance to the Client in the most appropriate manner for the express purpose of meeting the Client’s needs in respect of provision of the Company’s stated services, in accordance with and subject to, prevailing law of Netherlands. Any use of the above terminology or other words in the singular, plural, capitalization and/or he/she or they, are taken as interchangeable and therefore as referring to same.</p>\n    <h2><strong>Cookies</strong></h2>\n    <p>We employ the use of cookies. By accessing IOTA MEMES, you agreed to use cookies in agreement with the IOTA MEMES's Privacy Policy. </p>\n    <p>Most interactive websites use cookies to let us retrieve the user’s details for each visit. Cookies are used by our website to enable the functionality of certain areas to make it easier for people visiting our website. Some of our affiliate/advertising partners may also use cookies.</p>\n    <h2><strong>License</strong></h2>\n    <p>Unless otherwise stated, IOTA MEMES and/or its licensors own the intellectual property rights for all material on IOTA MEMES. All intellectual property rights are reserved. You may access this from IOTA MEMES for your own personal use subjected to restrictions set in these terms and conditions.</p>\n    <p>You must not:</p>\n    <ul>\n        <li>Republish material from IOTA MEMES</li>\n        <li>Sell, rent or sub-license material from IOTA MEMES</li>\n        <li>Reproduce, duplicate or copy material from IOTA MEMES</li>\n        <li>Redistribute content from IOTA MEMES</li>\n    </ul>\n    <p>This Agreement shall begin on the date hereof. </p>\n    <p>Parts of this website offer an opportunity for users to post and exchange opinions and information in certain areas of the website. IOTA MEMES does not filter, edit, publish or review Comments prior to their presence on the website. Comments do not reflect the views and opinions of IOTA MEMES,its agents and/or affiliates. Comments reflect the views and opinions of the person who post their views and opinions. To the extent permitted by applicable laws, IOTA MEMES shall not be liable for the Comments or for any liability, damages or expenses caused and/or suffered as a result of any use of and/or posting of and/or appearance of the Comments on this website.</p>\n    <p>IOTA MEMES reserves the right to monitor all Comments and to remove any Comments which can be considered inappropriate, offensive or causes breach of these Terms and Conditions.</p>\n    <p>You warrant and represent that:</p>\n    <ul>\n        <li>You are entitled to post the Comments on our website and have all necessary licenses and consents to do so;</li>\n        <li>The Comments do not invade any intellectual property right, including without limitation copyright, patent or trademark of any third party;</li>\n        <li>The Comments do not contain any defamatory, libelous, offensive, indecent or otherwise unlawful material which is an invasion of privacy</li>\n        <li>The Comments will not be used to solicit or promote business or custom or present commercial activities or unlawful activity.</li>\n    </ul>\n    <p>You hereby grant IOTA MEMES a non-exclusive license to use, reproduce, edit and authorize others to use, reproduce and edit any of your Comments in any and all forms, formats or media.</p>\n    <h2><strong>Hyperlinking to our Content</strong></h2>\n    <p>The following organizations may link to our Website without prior written approval:</p>\n    <ul>\n        <li>Government agencies;</li>\n        <li>Search engines;</li>\n        <li>News organizations;</li>\n        <li>Online directory distributors may link to our Website in the same manner as they hyperlink to the Websites of other listed businesses; and</li>\n        <li>System wide Accredited Businesses except soliciting non-profit organizations, charity shopping malls, and charity fundraising groups which may not hyperlink to our Web site.</li>\n    </ul>\n    <p>These organizations may link to our home page, to publications or to other Website information so long as the link: (a) is not in any way deceptive; (b) does not falsely imply sponsorship, endorsement or approval of the linking party and its products and/or services; and (c) fits within the context of the linking party’s site.</p>\n    <p>We may consider and approve other link requests from the following types of organizations:</p>\n    <ul>\n        <li>commonly-known consumer and/or business information sources;</li>\n        <li>dot.com community sites;</li>\n        <li>associations or other groups representing charities;</li>\n        <li>online directory distributors;</li>\n        <li>internet portals;</li>\n        <li>accounting, law and consulting firms; and</li>\n        <li>educational institutions and trade associations.</li>\n    </ul>\n    <p>We will approve link requests from these organizations if we decide that: (a) the link would not make us look unfavorably to ourselves or to our accredited businesses; (b) the organization does not have any negative records with us; (c) the benefit to us from the visibility of the hyperlink compensates the absence of IOTA MEMES; and (d) the link is in the context of general resource information.</p>\n    <p>These organizations may link to our home page so long as the link: (a) is not in any way deceptive; (b) does not falsely imply sponsorship, endorsement or approval of the linking party and its products or services; and (c) fits within the context of the linking party’s site.</p>\n    <p>If you are one of the organizations listed in paragraph 2 above and are interested in linking to our website, you must inform us by sending an e-mail to IOTA MEMES. Please include your name, your organization name, contact information as well as the URL of your site, a list of any URLs from which you intend to link to our Website, and a list of the URLs on our site to which you would like to link. Wait 2-3 weeks for a response.</p>\n    <p>Approved organizations may hyperlink to our Website as follows:</p>\n    <ul>\n        <li>By use of our corporate name; or</li>\n        <li>By use of the uniform resource locator being linked to; or</li>\n        <li>By use of any other description of our Website being linked to that makes sense within the context and format of content on the linking party’s site.</li>\n    </ul>\n    <p>No use of IOTA MEMES's logo or other artwork will be allowed for linking absent a trademark license agreement.</p>\n    <h2><strong>iFrames</strong></h2>\n    <p>Without prior approval and written permission, you may not create frames around our Webpages that alter in any way the visual presentation or appearance of our Website.</p>\n    <h2><strong>Content Liability</strong></h2>\n    <p>We shall not be hold responsible for any content that appears on your Website. You agree to protect and defend us against all claims that is rising on your Website. No link(s) should appear on any Website that may be interpreted as libelous, obscene or criminal, or which infringes, otherwise violates, or advocates the infringement or other violation of, any third party rights.</p>\n    <h2><strong>Your Privacy</strong></h2>\n    <p>Please read Privacy Policy</p>\n    <h2><strong>Reservation of Rights</strong></h2>\n    <p>We reserve the right to request that you remove all links or any particular link to our Website. You approve to immediately remove all links to our Website upon request. We also reserve the right to amen these terms and conditions and it’s linking policy at any time. By continuously linking to our Website, you agree to be bound to and follow these linking terms and conditions.</p>\n    <h2><strong>Removal of links from our website</strong></h2>\n    <p>If you find any link on our Website that is offensive for any reason, you are free to contact and inform us any moment. We will consider requests to remove links but we are not obligated to or so or to respond to you directly.</p>\n    <p>We do not ensure that the information on this website is correct, we do not warrant its completeness or accuracy; nor do we promise to ensure that the website remains available or that the material on the website is kept up to date.</p>\n    <h2><strong>Disclaimer</strong></h2>\n    <p>To the maximum extent permitted by applicable law, we exclude all representations, warranties and conditions relating to our website and the use of this website. Nothing in this disclaimer will:</p>\n    <ul>\n        <li>limit or exclude our or your liability for death or personal injury;</li>\n        <li>limit or exclude our or your liability for fraud or fraudulent misrepresentation;</li>\n        <li>limit any of our or your liabilities in any way that is not permitted under applicable law; or</li>\n        <li>exclude any of our or your liabilities that may not be excluded under applicable law.</li>\n    </ul>\n    <p>The limitations and prohibitions of liability set in this Section and elsewhere in this disclaimer: (a) are subject to the preceding paragraph; and (b) govern all liabilities arising under the disclaimer, including liabilities arising in contract, in tort and for breach of statutory duty.</p>\n    <p>As long as the website and the information and services on the website are provided free of charge, we will not be liable for any loss or damage of any nature.</p>\n  </div>\n  </Card>\n    </Container80>\n  );\n};\n\nexport default TermsPage;\n","import Container80 from '../../components/Container80/Container80';\nimport Card from '../../components/Card/Card';\n\nconst PrivacyPage = () => {\n  return (\n    <Container80>\n      <Card>\n        <div style={{ margin: '40px' }}>\n        <h1>Privacy Policy for IOTA MEMES</h1>\n\n<p>At IOTA MEMES, accessible from iotamemes.com, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by IOTA MEMES and how we use it.</p>\n\n<p>If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.</p>\n\n<p>This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in IOTA MEMES. This policy is not applicable to any information collected offline or via channels other than this website. </p>\n\n<h1>Consent</h1>\n\n<p>By using our website, you hereby consent to our Privacy Policy and agree to its terms.</p>\n\n<h2>Information we collect</h2>\n\n<p>The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.</p>\n<p>If you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.</p>\n<p>When you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.</p>\n\n<h2>How we use your information</h2>\n\n<p>We use the information we collect in various ways, including to:</p>\n\n<ul>\n<li>Provide, operate, and maintain our website</li>\n<li>Improve, personalize, and expand our website</li>\n<li>Understand and analyze how you use our website</li>\n<li>Develop new products, services, features, and functionality</li>\n<li>Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the website, and for marketing and promotional purposes</li>\n<li>Send you emails</li>\n<li>Find and prevent fraud</li>\n</ul>\n\n<h2>Log Files</h2>\n\n<p>IOTA MEMES follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information.</p>\n\n<h2>Cookies and Web Beacons</h2>\n\n<p>Like any other website, IOTA MEMES uses 'cookies'. These cookies are used to store information including visitors' preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users' experience by customizing our web page content based on visitors' browser type and/or other information.</p>\n\n<p>For more general information on cookies, please read <a href=\"https://www.privacypolicyonline.com/what-are-cookies/\">\"What Are Cookies\"</a>.</p>\n\n\n\n<h2>Advertising Partners Privacy Policies</h2>\n\n<p>You may consult this list to find the Privacy Policy for each of the advertising partners of IOTA MEMES.</p>\n\n<p>Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on IOTA MEMES, which are sent directly to users' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.</p>\n\n<p>Note that IOTA MEMES has no access to or control over these cookies that are used by third-party advertisers.</p>\n\n<h2>Third Party Privacy Policies</h2>\n\n<p>IOTA MEMES's Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options. </p>\n\n<p>You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective websites.</p>\n\n<h2>CCPA Privacy Rights (Do Not Sell My Personal Information)</h2>\n\n<p>Under the CCPA, among other rights, California consumers have the right to:</p>\n<p>Request that a business that collects a consumer's personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.</p>\n<p>Request that a business delete any personal data about the consumer that a business has collected.</p>\n<p>Request that a business that sells a consumer's personal data, not sell the consumer's personal data.</p>\n<p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.</p>\n\n<h2>GDPR Data Protection Rights</h2>\n\n<p>We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to the following:</p>\n<p>The right to access – You have the right to request copies of your personal data. We may charge you a small fee for this service.</p>\n<p>The right to rectification – You have the right to request that we correct any information you believe is inaccurate. You also have the right to request that we complete the information you believe is incomplete.</p>\n<p>The right to erasure – You have the right to request that we erase your personal data, under certain conditions.</p>\n<p>The right to restrict processing – You have the right to request that we restrict the processing of your personal data, under certain conditions.</p>\n<p>The right to object to processing – You have the right to object to our processing of your personal data, under certain conditions.</p>\n<p>The right to data portability – You have the right to request that we transfer the data that we have collected to another organization, or directly to you, under certain conditions.</p>\n<p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.</p>\n\n<h2>Children's Information</h2>\n\n<p>Another part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.</p>\n\n<p>IOTA MEMES does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.</p>\n</div>\n</Card>\n</Container80>\n  ); \n};\n\nexport default PrivacyPage;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Container80 from '../../components/Container80/Container80';\nimport Card from '../../components/Card/Card';\nimport Loader from '../../components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { Link } from 'react-router-dom';\nimport './ReportsPage.css';\n\nconst ReportsPage = () => {\n  const [loading, setLoading]:any = useState(true);\n  const [flags, setFlags]:any = useState(null);\n\n  const userLogin = useSelector((state: RootState) => state.userLogin);\n  const { userInfo }: any = userLogin;\n\n  const getFlags = async () => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data }: any = await axios.get('/api/flags', config).catch((error: any) => {\n      console.log(error);\n    });\n    setFlags(data);\n    setLoading(false);\n  };\n\n  const removeFlag = async (flagId: string) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${userInfo.token}`\n      },\n      data: {\n        flagId\n      }\n    };\n    await axios.delete(`/api/flags`, config);\n    getFlags();\n  };\n\n  const removeUser = async (userId: string) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${userId}`, config);\n    getFlags();\n  }\n\n  const deleteMeme = async (flagId: string) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${userInfo.token}`\n      }, \n      data: {\n        flagId\n      }\n    };\n    await axios.delete(`/api/flags/meme`, config);\n    getFlags();\n  };\n\n  useEffect(() => {\n    getFlags();\n  }, []);\n\n  return (\n    <Container80>\n      <Card>\n        { loading ? (\n          <Loader />\n        ) : (\n          <table>\n            <tr>\n              <th>Username</th>\n              <th>Flag Count</th>\n              <th>View Meme</th>\n              <th>Actions</th>\n            </tr>\n          { flags.map((flag: any) => (\n            <tr key={flag._id}>\n              <td><Link to={`/user/${flag.user}`}>{flag.username}</Link></td>\n              <td>{flag.flagCount}</td>\n              <td><Link to={`/meme/${flag.meme}`}>View Meme</Link></td>\n              <td>\n                <button onClick={() => { removeFlag(flag._id) }}>Remove Flag</button>\n                <button onClick={() => { deleteMeme(flag._id) }}>Delete Meme</button>\n                <button onClick={() => { removeUser(flag.user) }}>Delete User</button>\n              </td>\n            </tr>\n          ))}\n          </table>\n        )}\n      </Card>\n    </Container80>\n  );\n};\n\nexport default ReportsPage;\n","import Container80 from '../../components/Container80/Container80';\nimport Card from '../../components/Card/Card';\nimport './AboutPage.css';\nimport IotaButton from '../../components/IotaButton/IotaButton';\nimport { Link } from 'react-router-dom';\n\nconst AboutPage = () => {\n  return (\n    <Container80>\n      <Card>\n        <div style={{padding: '30px'}}>\n          <h1 className=\"aboutHeading\">All you need to know about IOTA MEMES</h1>\n\n          <p>IOTA Memes is a platform for sharing and rewarding creators for the joy they bring into this world, through a simple up-voting system using Likotas, supported by community donations and competitions.</p>\n\n          <p>As simple as the title suggests, we’re all about upping the meme game!</p>\n\n          <p>Login using your discord and uploads are as easy as 1, 2, 3.</p>\n          <ol>\n            <li>Upload New Meme image - (3MB file limit, file types only jpg, png, gif)</li>\n            <li>Tag your image and submit - (add up to 6 tags, separate by a tab or enter)</li>\n            <li>Get Likotas and donations! - (confirm your image, rise in the ranks, to get more rewards and donations)</li>\n          </ol>\n\n          <strong>Voting</strong>\n          <p>The voting system uses a simple up vote metric, the more Likotas your memes get, the higher in the page your meme becomes, the more exposure and reputation you generate, and hopefully more donations.</p>\n\n          <strong>Sharing</strong>\n          <p>Sharing is possible using the share buttons on each image card, to popular networks such as Twitter, Facebook, Reddit.</p>\n\n\n          <strong>Donations</strong>\n          <p>Donations are what keep the community going and all payments are made possible using the <a href=\"https://github.com/iota-button/iota-button\">iota-button</a> and <a href=\"https://firefly.iota.org\">Firefly</a> Wallet using IOTA tokens. The donation system is 100% direct. All gifts, donations, and support go directly to the creators wallet. No middleman.</p>\n          <p>All donations are made possible using IOTA via the Firefly wallet. You can add your wallet address through the settings option in the user nav menu.</p>\n\n          <strong>Flagging</strong>\n          <p>We have also included a community flagging system, so that any inappropriate content can be flagged, reveiewed, and removed.</p>\n          <p>If you deem an image inappropriate, just click the flag.</p>\n          <p>It’s that simple! So, get creating, get sharing, get supporting.</p>\n          <div className=\"aboutBottom\">\n            <div className=\"iota-button\" style={{marginLeft: '30px'}}>\n              <IotaButton \n                text='DONATE TO SUPPORT OUR WORK'\n                address='iota1qplr8pw4tu24jdagkleqvp28rwsdfhx9cgcuaxvjaz5zd9gx9u50vg2v7md'\n              ></IotaButton> \n            </div>\n            <a href=\"https://firefly.iota.org/\">\n              <img src='/images/firefly.png' />\n            </a>\n          </div>\n          <p className=\"about__links\">\n            <Link to=\"/terms\" style={{marginRight: '20px'}}>Terms</Link>     <Link to=\"/privacy\">Privacy</Link>\n          </p>\n        </div>\n      </Card>\n    </Container80>\n  );\n}; \n\nexport default AboutPage;\n","import { Redirect, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../store'\n\nconst PrivateRoute = ({ children, ...rest }: any) => {\n  const userLogin = useSelector((state: RootState) => state.userLogin);\n  const { userInfo }: any = userLogin;\n\n  const location = window.location.pathname;\n\n  return (\n    <>\n      {userInfo ? (\n        <Route {...rest}></Route>\n      ) : (\n        <Redirect to={`/login?redirect=${location}`}></Redirect>\n      )}\n    </>\n  );\n};\n\nexport default PrivateRoute;\n","import './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AuthSuccess from './pages/AuthSuccess/AuthSuccess';\nimport NewMeme from './pages/NewMeme/NewMeme';\nimport Navbar from './components/Navbar/Navbar';\nimport MemesPage from './pages/MemesPage/MemesPage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout } from './actions/userActions'\nimport { RootState } from './store';\nimport Artists from './pages/Artists/Artists';\nimport SettingsPage from './pages/SettingsPage/SettingsPage';\nimport MemePage from './pages/MemePage/MemePage';\nimport UserPage from './pages/UserPage/UserPage';\nimport TermsPage from './pages/TermsPage/TermsPage';\nimport PrivacyPage from './pages/PrivacyPage/PrivacyPage';\nimport ReportsPage from './pages/ReportsPage/ReportsPage';\nimport AboutPage from './pages/AboutPage/AboutPage';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\n\nfunction App() {\n  const userLogin: any = useSelector((state: RootState) => state.userLogin);\n  const isLoggedIn = userLogin.userInfo || null;\n\n  const dispatch = useDispatch();\n  const [banned, setBanned] = useState(false);\n\n  const checkBanned = async () => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${isLoggedIn.token}`\n      }\n    }\n    try {\n      const { data } = await axios.get('/api/users/@me/isBanned', config);\n      const { isBanned } = data;\n      console.log(isBanned)\n      setBanned(isBanned);\n    } catch (error) {\n      dispatch(logout());\n    }\n  }\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      checkBanned();\n    }\n  }, [isLoggedIn]);\n\n  return (\n    <>\n      <Router>\n        <Navbar isLoggedIn={isLoggedIn} />\n        <Switch>\n          <Route\n            exact\n            path='/authorize'\n            component={() => {\n              window.location.href =\n                'https://discord.com/api/oauth2/authorize?client_id=854235929329795072&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fauthenticate%2Fsuccess&response_type=code&scope=identify';\n              return null;\n            }}\n          />\n          <Route exact path='/authenticate/success' component={AuthSuccess} />\n          <PrivateRoute exact path='/newmeme' component={NewMeme} />\n          <Route exact path='/' component={MemesPage} />\n          <Route exact path='/artists' component={Artists} />\n          <Route exact path='/terms' component={TermsPage} />\n          <Route exact path='/privacy' component={PrivacyPage} />\n          <Route exact path ='/flags' component={ReportsPage} />\n          <Route exact path='/settings' component={SettingsPage} />\n          <Route path='/meme/:id' component={MemePage} />\n          <Route path='/user/:id' component={UserPage} />\n          <Route exact path='/about' component={AboutPage} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  userLoginReducer,\n  getLikedMemesReducer,\n} from './reducers/userReducers';\nimport { getMemesReducer } from './reducers/memeReducers';\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  getMemes: getMemesReducer,\n  getLikedMemes: getLikedMemesReducer,\n});\n\nexport type RootState = ReturnType<typeof reducer>;\n\nconst storageUserInfo: any = localStorage.getItem('userInfo');\n\nconst userInfoFromStorage = storageUserInfo\n  ? JSON.parse(storageUserInfo)\n  : null;\n\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage,\n  },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  GET_LIKED_MEMES_REQUEST,\n  GET_LIKED_MEMES_SUCCESS,\n  GET_LIKED_MEMES_FAIL,\n} from '../constants/userContants';\n\nexport const userLoginReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const getLikedMemesReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case GET_LIKED_MEMES_REQUEST:\n      return { loading: true };\n    case GET_LIKED_MEMES_SUCCESS:\n      return { loading: false, likedMemes: action.payload };\n    case GET_LIKED_MEMES_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_MEMES_REQUEST,\n  GET_MEMES_SUCCESS,\n  GET_MEMES_FAIL,\n} from '../constants/memeContants';\n\nexport const getMemesReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case GET_MEMES_REQUEST:\n      return { loading: true };\n    case GET_MEMES_SUCCESS:\n      return { loading: false, memes: action.payload };\n    case GET_MEMES_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport './Card.css';\n\nconst Card = ({ children }: any) => {\n  return <div className='card'>{children}</div>;\n};\n\nexport default Card;\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../../Card/Card\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport \"./Meme.css\";\nimport { RootState } from \"../../../store\";\nimport IotaButton from \"../../IotaButton/IotaButton\";\n\ninterface MemeProps {\n  id: string;\n  imgURL: string;\n  memeAuthor: any;\n  memeTags: string[];\n  upvotes: number;\n  onClick: (...params: any) => void;\n}\n\nconst Meme = ({\n  id,\n  imgURL,\n  memeAuthor,\n  memeTags,\n  upvotes,\n  onClick,\n}: MemeProps) => {\n  const [user, setUser] = useState({\n    avatar: \"\",\n    username: \"\",\n  });\n\n  const [likes, setLikes] = useState(upvotes);\n\n  useEffect(() => {\n    setLikes(upvotes)\n  }, [upvotes])\n\n  let userInfo: any;\n\n  const userLogin: any = useSelector((state: RootState) => state.userLogin);\n  try {\n    userInfo = userLogin.userInfo;\n  } catch (error) {\n    userInfo = null;\n  }\n\n  const likedMemesMeta: any = useSelector(\n    (state: RootState) => state.getLikedMemes\n  );\n  const { loading, error, likedMemes }: any = likedMemesMeta;\n  const [isLiked, setIsLiked] = useState(\n    likedMemes ? likedMemes.includes(id) : false\n  );\n\n  useEffect(() => {\n    const getUser = async (userId: string) => {\n      const { data }: any = await axios.get(`/api/users/${userId}`);\n      setUser(data);\n    };\n\n    setIsLiked(likedMemes ? likedMemes.includes(id) : false);\n\n    getUser(memeAuthor);\n  }, [memeAuthor, likedMemes]);\n\n  const likeHandler = async () => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const memeData: any = await axios.get(\n        `/api/memes/toggleLike/${id}`,\n        config\n      );\n      const likesNew: any = memeData.data.upvotes;\n      console.log(memeData.data);\n      setIsLiked(memeData.data.likedMemes.includes(id));\n      setLikes(likesNew);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onClickHandler = () => {\n    onClick({ id, imgURL, memeAuthor, memeTags, upvotes, user });\n  };\n\n  return (\n    <div className=\"meme\">\n      {/* <div className=\"memeAuthor\" onClick={onClickHandler}>\n        <img src={user.avatar} className=\"avatar\" />\n        <Link to={`/user/${memeAuthor}`}>\n          <h1 className=\"username\">{user.username}</h1>\n        </Link>\n          </div> */}\n      {/*<Link to={`/meme/${id}`}>*/}\n      <div onClick={onClickHandler}>\n        <div className=\"meme-img\">\n          <img src={imgURL} />\n        </div>\n      </div>\n      {/*</Link>*/}\n      <div className=\"meta\">\n        <div className=\"tags\" onClick={onClickHandler}>\n          {memeTags.length > 0 &&\n            memeTags.map((tag: string) => <span key={tag}>#{tag}</span>)}\n        </div>\n        <div className=\"bottom\">\n          <nav className=\"level is-mobile\">\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <div className=\"likes\">{likes} LIKOTAS</div>\n              </div>\n            </div>\n            <div></div>\n            <div className=\"level-right\">\n              <img\n                src={isLiked ? \"/images/liked.svg\" : \"/images/like.svg\"}\n                onClick={likeHandler}\n                className=\"like\"\n              />\n            </div>\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Meme;\n"],"sourceRoot":""}